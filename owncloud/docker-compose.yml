version: "3"

services:
  owncloud:
    image: owncloud/server:${OWNCLOUD_VERSION}
    container_name: owncloud_server
    restart: always
    networks: 
      backend:
        aliases:
          - owncloud
    depends_on:
      - postgres-owncloud
      - redis
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_TRUSTED_DOMAINS=${OWNCLOUD_TRUSTED_DOMAINS}
      - OWNCLOUD_DB_TYPE=pgsql
      - OWNCLOUD_DB_NAME=${DB_NAME}
      - OWNCLOUD_DB_USERNAME=${DB_USER}
      - OWNCLOUD_DB_PASSWORD=${DB_PASS}
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    volumes:
      - owncloud:/mnt/data

  onlyoffice:
    image: onlyoffice/documentserver:${ONLYOFFICE_VERSION}
    restart: always
    environment:
      - JWT_ENABLED=false
    networks:
      backend:
        aliases:
          - owncloud
    volumes:
      - onlyoffice:/var/www/onlyoffice/Data

  postgres-owncloud:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    networks:
      - backend
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-owncloud:/var/lib/postgresql/data

  redis:
    image: redis:${REDIS_VERSION}
    container_name: owncloud_redis
    restart: always
    networks: 
      - owncloud
    command: ["--databases", "1"]
    volumes:
      - redis-owncloud:/data

networks:
  backend:
    external: true
    
volumes:
  owncloud:
    external: true
  postgres-owncloud:
    external: true
  redis-owncloud:
    external: true
  onlyoffice:
    external: true
  
  
